name: Do Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Version to be released (e.g. 1.3.0).'
        required: true
      next-snapshot-version:
        description: 'Version to be set after the release (e.g. 1.4.0-SNAPSHOT).'
        required: true

env:
  GIT_AUTHOR_NAME: Release workflow
  GIT_AUTHOR_EMAIL: <>
  GIT_COMMITTER_NAME: Release workflow
  GIT_COMMITTER_EMAIL: <>
jobs:
  do-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'zulu'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Use Local Maven cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: maven-cache-${{ hashFiles('**/pom.xml') }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Do the Deployment and related stuff
      run: |
        mvn versions:set -B -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.release-version }}
        git commit -am "Release ${{ github.event.inputs.release-version }}"
        git tag kerberos-server-${{ github.event.inputs.release-version }}
        mvn clean install -B
        mvn deploy -B -Prelease -DskipTests
        docker buildx build --push -f Dockerfile --tag kwart/kerberos-server:${{ github.event.inputs.release-version }} .
        mvn versions:set -B -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.next-snapshot-version }}
        git commit -am "Next version is ${{ github.event.inputs.next-snapshot-version }}"
        git push origin kerberos-server-${{ github.event.inputs.release-version }} master
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/kerberos-server.jar
        tag: kerberos-server-${{ github.event.inputs.release-version }}
        overwrite: true
